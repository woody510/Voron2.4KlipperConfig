#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater
#heater_temp: 100.0



## This is a simple include for the Exhaust fan. To use it with your printer, edit
## the pin definition in line 16 so it matches your printer.
## What you get:
## - a generic fan "Exhaust" which is adjustable in GCODE and in Mainsail/Fluidd
## - Commands in your 12864-controller to turn the fan on/off or adjust in 10%-steps
## - a Macro to turn the fan off some time after the print.
##
## Slicer integration: Add "SET_FAN_SPEED FAN=exhaust SPEED=1" in your start-macro
## (or less fan depending on your needs, like SPEED=0.8)
## in your end print code, add "UPDATE_DELAYED_GCODE ID=exhaust_off DURATION=180"
## this keeps your exhaust running for 180s after the print finishes to clean the chamber a bit more.

[fan_generic exhaust]
## Exhaust_fan - FAN5 on Octopus
## Adjust if you use a different board or a different terminal.
pin: PD13

[menu __main __control __exhaustonoff]
type: command
name: Exhaust {'ON' if printer['fan_generic exhaust'].speed > 0 else 'OFF'}
enable: {'fan_generic exhaust' in printer}
gcode:
    TOGGLE_EXHAUST

[menu __main __control __filterspeed]
type: input
enable: {'fan_generic exhaust' in printer}
name: Filter %: {'%3d' % (menu.input*100)}%
input: {printer["fan_generic exhaust"].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=exhaust SPEED={menu.input}

[delayed_gcode exhaust_off]
gcode:
    SET_FAN_SPEED FAN=exhaust SPEED=0

[gcode_macro TOGGLE_EXHAUST]
gcode:
    {% if printer['fan_generic exhaust'].speed > 0 %}
      SET_FAN_SPEED FAN=exhaust SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=exhaust SPEED=1
    {% endif %}